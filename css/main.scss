@import "utilities";
@import "colorpicker";
@import "dropdown";
@import "upload-progress";
@import "toolbar";
@import "modal";
@import "trix";

@import "themes/duo.css";

.ws-app {
  width: 100%;
  background: $white;
  display: flex;

  &.is-dragging {
    cursor: grabbing !important;
  }
}

.ws-editor {
  width: 100%;
  overflow: visible;
  padding: 20px;
  background: $gray200;
}

.ws-right-panel {
  width: 395px;
  flex-shrink: 0;
  border-left: 1px solid $gray400;
}

.ws-input {
  display: block;
  width: 100%;
  box-sizing: border-box;
  border: 1px solid $gray600;
  padding: 4px;
  border-radius: 2px;
}

.ws-draggable-item {
  display: inline-block;
  cursor: grab;
  width: 70px;
  height: 60px;
  border: 1px solid $gray400;
  border-radius: 3px;
  overflow: hidden;
  margin-left: 5px;
  margin-top: 5px;
  text-align: center;
  font-size: 13px;
  text-transform: uppercase;
  font-weight: bold;
  color: $gray600;

  &:hover {
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
      0 4px 6px -2px rgba(0, 0, 0, 0.05);
    border-color: $gray600;
  }

  svg {
    display: block;
    margin: 5px auto;
    fill: $gray600;
  }
}

.ws-draggable-row {
  display: inline-flex;
  width: 80%;
  margin: 0 10%;
  box-sizing: border-box;
  cursor: grab;

  .ws-draggable-row-column {
    border: 1px solid $gray600;
    height: 20px;
  }
}

.ws-item-being-dragged {
  position: absolute;
  z-index: $baseZIndex;

  border: 1px solid black;
  padding: 5px;
  background: white;

  // It's important to disable pointer-events so that onMouseEnter and
  // onMouseLeave works properly on the drop targets.
  pointer-events: none;
}

.ws-drop-target {
  position: absolute;
  z-index: $baseZIndex - 1;

  height: 4px;
  background: $blue600;
  pointer-events: none;
  display: flex;
  justify-content: center;

  .ws-drop-target-text {
    height: 20px;
    background: $blue600;
    color: $blue100;

    padding: 0 5px;
    margin-top: -10px;
    border-radius: 10px;
  }
}

// An email is represent by a list of rows. Each row has or more blocks depending
// on its layout (100, 50x50, 33x33x33, etc.). This class represents a row that
// contains one or more blocks.
.ws-row {
  position: relative;
  width: 100%;
  margin: 0 auto;
}

.ws-row-hover {
  z-index: 9;
  pointer-events: none;
  position: absolute;

  border: 2px solid $blue300;
  border-radius: 3px;
  box-sizing: border-box;

  &.ws-selected {
    border-color: $blue500;

    .ws-move-icon {
      background: $blue500;
    }
  }

  .ws-move-icon {
    pointer-events: auto;
    cursor: grab;
    padding: 3px;
    position: absolute;
    height: 18px;
    background: $blue300;
    top: 0;
    right: 0;
    color: $white;
    border-top-left-radius: 2px;
    border-bottom-left-radius: 2px;
  }
}

.ws-block {
  position: relative;
}

.ws-block-resizer {
  z-index: 11;
  position: absolute;
  top: 0;
  right: -2px;
  content: "";
  cursor: col-resize;
  width: 4px;
  height: 100%;

  &:hover {
    background: red;
  }
}

// A row contains one or more blocks depending on the layout (100, 50x50, 33x33x33, etc.).
// Each block contains a list of content - but it starts empty. This class is applied to
// empty blocks, that is, blocks with an empty list of content.
.ws-empty-block {
  background: $blue200;
  height: 50px;
  padding: 10px;
  margin: 5px;
  box-sizing: border-box;
  border: 1px dashed $blue500;
  display: flex;
  align-items: center;
  justify-content: center;
  color: $blue600;
  font-size: 13px;

  &.drop-target {
    background: $blue600;
    border-color: $blue700;
    color: $blue900;
  }
}

.ws-divider {
  height: 1px;
  background: $gray300;
  margin: 10px 0;
}

.ws-content {
  position: relative;

  .ws-content-hover {
    z-index: 9;
    pointer-events: none;
    position: absolute;
    top: 0;
    left: 0;
    margin-left: -2px;
    margin-top: -2px;
    width: calc(100% + 4px);
    height: calc(100% + 4px);
    border: 2px solid $blue300;
    border-radius: 3px;
    box-sizing: border-box;

    &.ws-selected {
      border-color: $blue500;

      .ws-move-icon {
        background: $blue500;
      }
    }

    .ws-move-icon {
      cursor: grab;
      padding: 3px;
      position: absolute;
      pointer-events: auto;
      height: 18px;
      background: $blue300;
      top: 0;
      right: 0;
      color: $white;
      border-top-left-radius: 2px;
      border-bottom-left-radius: 2px;
    }
  }
}

.ws-image-empty {
  background: $gray200;
  height: 80px;
  display: flex;
  align-items: center;
  justify-content: center;
  color: $gray600;
  font-style: italic;
  border: 1px solid $gray300;
}

// The header of the editor displays what is currently being edited. For example,
// when the user selects an image content, the header display "Editing image" along
// with buttons on the right to remove and unselect the selected item.
.ws-editor-header {
  display: flex;
  align-items: center;
  border-bottom: 1px solid $gray400;
  padding: 5px;

  .ws-editor-header-text {
    font-weight: bold;
    margin-right: auto;
  }

  // The header displays some buttons on the right. The buttons are pushed to the right
  // because .ws-editor-header-text has 'margin-right: auto'.
  button {
    border: none;
    background: none;
    fill: $gray600;
  }
}

.ws-editor-section {
  padding: 10px;
  border-top: 1px solid $gray400;
  font-size: 14px;
  color: $gray800;

  &--inline {
    display: flex;
    align-items: center;

    .ws-editor-section-header {
      margin-right: auto;
    }
  }

  .ws-editor-section-header {
    text-transform: uppercase;
    font-size: 14px;
    font-weight: bold;
    color: $gray600;
  }
}

.ws-button-group {
  button {
    border: 1px solid $gray400;
    background: none;
    fill: $gray600;
    border-radius: 2px;
    margin-left: 5px;
    cursor: pointer;
  }

  button.ws-active {
    border-color: $blue700;
    fill: $blue800;
  }
}

.ql-bubble .ql-picker.ql-size .ql-picker-label[data-value="small"]::before,
.ql-bubble .ql-picker.ql-size .ql-picker-item[data-value="small"]::before {
  content: "Pequeno" !important;
}

.ql-bubble .ql-picker.ql-size .ql-picker-item[data-value="title"]::before {
  font-size: 20px;
}

.ql-bubble .ql-picker.ql-size .ql-picker-label[data-value="title"]::before,
.ql-bubble .ql-picker.ql-size .ql-picker-item[data-value="title"]::before {
  content: "TÃ­tulo" !important;
}
